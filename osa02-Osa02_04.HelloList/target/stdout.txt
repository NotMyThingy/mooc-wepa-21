19:07:15.252 [TestRunner thread] DEBUG org.springframework.test.context.junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class hellolist.HelloListTest]
19:07:15.256 [TestRunner thread] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
19:07:15.263 [TestRunner thread] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
19:07:15.308 [TestRunner thread] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [hellolist.HelloListTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
19:07:15.321 [TestRunner thread] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [hellolist.HelloListTest], using SpringBootContextLoader
19:07:15.324 [TestRunner thread] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [hellolist.HelloListTest]: class path resource [hellolist/HelloListTest-context.xml] does not exist
19:07:15.324 [TestRunner thread] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [hellolist.HelloListTest]: class path resource [hellolist/HelloListTestContext.groovy] does not exist
19:07:15.325 [TestRunner thread] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [hellolist.HelloListTest]: no resource found for suffixes {-context.xml, Context.groovy}.
19:07:15.325 [TestRunner thread] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [hellolist.HelloListTest]: HelloListTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
19:07:15.365 [TestRunner thread] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [hellolist.HelloListTest]
19:07:15.413 [TestRunner thread] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/notmythingy/Programming/mooc-wepa-21/osa02-Osa02_04.HelloList/target/classes/hellolist/HelloListApplication.class]
19:07:15.420 [TestRunner thread] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration hellolist.HelloListApplication for test class hellolist.HelloListTest
19:07:15.507 [TestRunner thread] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [hellolist.HelloListTest]: using defaults.
19:07:15.509 [TestRunner thread] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
19:07:15.523 [TestRunner thread] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.transaction.TransactionalTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [org/springframework/transaction/interceptor/TransactionAttributeSource]
19:07:15.523 [TestRunner thread] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [org/springframework/transaction/interceptor/TransactionAttribute]
19:07:15.523 [TestRunner thread] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@acd6dde, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@753049ea, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@28c40e9f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@f755622, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6eb7798f, org.springframework.test.context.event.EventPublishingTestExecutionListener@193f02aa, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@118747e4, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3466c7b0, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6148bbb2, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@83cf63, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2b1000f0, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@29490965]
19:07:15.527 [TestRunner thread] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [hellolist.HelloListTest]
19:07:15.528 [TestRunner thread] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [hellolist.HelloListTest]
19:07:15.529 [TestRunner thread] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [hellolist.HelloListTest]
19:07:15.529 [TestRunner thread] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [hellolist.HelloListTest]
19:07:15.533 [TestRunner thread] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@146d406 testClass = HelloListTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@687c173d testClass = HelloListTest, locations = '{}', classes = '{class hellolist.HelloListApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@5fd79e87 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7b577ff9, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4d04e519, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@11898f95, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@798df9b2, org.springframework.boot.test.context.SpringBootTestArgs@1], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].
19:07:15.535 [TestRunner thread] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [hellolist.HelloListTest]
19:07:15.535 [TestRunner thread] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [hellolist.HelloListTest]
19:07:15.561 [TestRunner thread] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.3.2.RELEASE)

2021-07-24 19:07:15.856  INFO 15930 --- [stRunner thread] hellolist.HelloListTest                  : Starting HelloListTest on mythingy with PID 15930 (started by notmythingy in /home/notmythingy/Programming/mooc-wepa-21/osa02-Osa02_04.HelloList)
2021-07-24 19:07:15.857  INFO 15930 --- [stRunner thread] hellolist.HelloListTest                  : No active profile set, falling back to default profiles: default
2021-07-24 19:07:16.713  INFO 15930 --- [stRunner thread] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2021-07-24 19:07:16.786  INFO 15930 --- [stRunner thread] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2021-07-24 19:07:16.986  INFO 15930 --- [stRunner thread] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2021-07-24 19:07:16.986  INFO 15930 --- [stRunner thread] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2021-07-24 19:07:16.995  INFO 15930 --- [stRunner thread] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 9 ms
2021-07-24 19:07:17.013  INFO 15930 --- [stRunner thread] hellolist.HelloListTest                  : Started HelloListTest in 1.442 seconds (JVM running for 2.037)

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = hellolist.HelloListController
           Method = hellolist.HelloListController#home(Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = index
             View = null
        Attribute = list
            value = [Hello world!, +[-[<<[+[--->]-[<<<]]]>>>-]>-.---.>..>.<<<<-.<+.>>>>>.>.<<.<-.]

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <title>Hello List!</title>
</head>

<body>
    <h1>Hello List!</h1>

    <!-- lisää toiminnallisuus listalla olevien arvojen listaamiseen tänne -->
    <ul>
        <li>
            <span>Hello world!</span>
        </li>
        <li>
            <span>+[-[&lt;&lt;[+[---&gt;]-[&lt;&lt;&lt;]]]&gt;&gt;&gt;-]&gt;-.---.&gt;..&gt;.&lt;&lt;&lt;&lt;-.&lt;+.&gt;&gt;&gt;&gt;&gt;.&gt;.&lt;&lt;.&lt;-.</span>
        </li>
    </ul>

    <!-- Älä koske alla olevaan lomakkeeseen, tutustumme
        tiedon lisäämiseen hieman myöhemmin -->
    <h2>Add content to list</h2>

    <form action="/" method="POST">
        <input type="text" name="content" />
        <input type="submit" value="Click!" />
    </form>
</body>

</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = hellolist.HelloListController
           Method = hellolist.HelloListController#home(Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = index
             View = null
        Attribute = list
            value = [Hello world!, +[-[<<[+[--->]-[<<<]]]>>>-]>-.---.>..>.<<<<-.<+.>>>>>.>.<<.<-., Abracadabra]

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <title>Hello List!</title>
</head>

<body>
    <h1>Hello List!</h1>

    <!-- lisää toiminnallisuus listalla olevien arvojen listaamiseen tänne -->
    <ul>
        <li>
            <span>Hello world!</span>
        </li>
        <li>
            <span>+[-[&lt;&lt;[+[---&gt;]-[&lt;&lt;&lt;]]]&gt;&gt;&gt;-]&gt;-.---.&gt;..&gt;.&lt;&lt;&lt;&lt;-.&lt;+.&gt;&gt;&gt;&gt;&gt;.&gt;.&lt;&lt;.&lt;-.</span>
        </li>
        <li>
            <span>Abracadabra</span>
        </li>
    </ul>

    <!-- Älä koske alla olevaan lomakkeeseen, tutustumme
        tiedon lisäämiseen hieman myöhemmin -->
    <h2>Add content to list</h2>

    <form action="/" method="POST">
        <input type="text" name="content" />
        <input type="submit" value="Click!" />
    </form>
</body>

</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = hellolist.HelloListController
           Method = hellolist.HelloListController#home(Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = index
             View = null
        Attribute = list
            value = [Hello world!, +[-[<<[+[--->]-[<<<]]]>>>-]>-.---.>..>.<<<<-.<+.>>>>>.>.<<.<-., Abracadabra, Alakazam]

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <title>Hello List!</title>
</head>

<body>
    <h1>Hello List!</h1>

    <!-- lisää toiminnallisuus listalla olevien arvojen listaamiseen tänne -->
    <ul>
        <li>
            <span>Hello world!</span>
        </li>
        <li>
            <span>+[-[&lt;&lt;[+[---&gt;]-[&lt;&lt;&lt;]]]&gt;&gt;&gt;-]&gt;-.---.&gt;..&gt;.&lt;&lt;&lt;&lt;-.&lt;+.&gt;&gt;&gt;&gt;&gt;.&gt;.&lt;&lt;.&lt;-.</span>
        </li>
        <li>
            <span>Abracadabra</span>
        </li>
        <li>
            <span>Alakazam</span>
        </li>
    </ul>

    <!-- Älä koske alla olevaan lomakkeeseen, tutustumme
        tiedon lisäämiseen hieman myöhemmin -->
    <h2>Add content to list</h2>

    <form action="/" method="POST">
        <input type="text" name="content" />
        <input type="submit" value="Click!" />
    </form>
</body>

</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = hellolist.HelloListController
           Method = hellolist.HelloListController#home(Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = index
             View = null
        Attribute = list
            value = [Hello world!, +[-[<<[+[--->]-[<<<]]]>>>-]>-.---.>..>.<<<<-.<+.>>>>>.>.<<.<-., Abracadabra, Alakazam, Bibbidi-Bobbidi-Boo]

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <title>Hello List!</title>
</head>

<body>
    <h1>Hello List!</h1>

    <!-- lisää toiminnallisuus listalla olevien arvojen listaamiseen tänne -->
    <ul>
        <li>
            <span>Hello world!</span>
        </li>
        <li>
            <span>+[-[&lt;&lt;[+[---&gt;]-[&lt;&lt;&lt;]]]&gt;&gt;&gt;-]&gt;-.---.&gt;..&gt;.&lt;&lt;&lt;&lt;-.&lt;+.&gt;&gt;&gt;&gt;&gt;.&gt;.&lt;&lt;.&lt;-.</span>
        </li>
        <li>
            <span>Abracadabra</span>
        </li>
        <li>
            <span>Alakazam</span>
        </li>
        <li>
            <span>Bibbidi-Bobbidi-Boo</span>
        </li>
    </ul>

    <!-- Älä koske alla olevaan lomakkeeseen, tutustumme
        tiedon lisäämiseen hieman myöhemmin -->
    <h2>Add content to list</h2>

    <form action="/" method="POST">
        <input type="text" name="content" />
        <input type="submit" value="Click!" />
    </form>
</body>

</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = hellolist.HelloListController
           Method = hellolist.HelloListController#home(Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = index
             View = null
        Attribute = list
            value = [Hello world!, +[-[<<[+[--->]-[<<<]]]>>>-]>-.---.>..>.<<<<-.<+.>>>>>.>.<<.<-., Abracadabra, Alakazam, Bibbidi-Bobbidi-Boo, By the Power of Grayskull, I HAVE THE POWER]

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <title>Hello List!</title>
</head>

<body>
    <h1>Hello List!</h1>

    <!-- lisää toiminnallisuus listalla olevien arvojen listaamiseen tänne -->
    <ul>
        <li>
            <span>Hello world!</span>
        </li>
        <li>
            <span>+[-[&lt;&lt;[+[---&gt;]-[&lt;&lt;&lt;]]]&gt;&gt;&gt;-]&gt;-.---.&gt;..&gt;.&lt;&lt;&lt;&lt;-.&lt;+.&gt;&gt;&gt;&gt;&gt;.&gt;.&lt;&lt;.&lt;-.</span>
        </li>
        <li>
            <span>Abracadabra</span>
        </li>
        <li>
            <span>Alakazam</span>
        </li>
        <li>
            <span>Bibbidi-Bobbidi-Boo</span>
        </li>
        <li>
            <span>By the Power of Grayskull, I HAVE THE POWER</span>
        </li>
    </ul>

    <!-- Älä koske alla olevaan lomakkeeseen, tutustumme
        tiedon lisäämiseen hieman myöhemmin -->
    <h2>Add content to list</h2>

    <form action="/" method="POST">
        <input type="text" name="content" />
        <input type="submit" value="Click!" />
    </form>
</body>

</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = hellolist.HelloListController
           Method = hellolist.HelloListController#home(Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = index
             View = null
        Attribute = list
            value = [Hello world!, +[-[<<[+[--->]-[<<<]]]>>>-]>-.---.>..>.<<<<-.<+.>>>>>.>.<<.<-., Abracadabra, Alakazam, Bibbidi-Bobbidi-Boo, By the Power of Grayskull, I HAVE THE POWER, Open sesame]

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <title>Hello List!</title>
</head>

<body>
    <h1>Hello List!</h1>

    <!-- lisää toiminnallisuus listalla olevien arvojen listaamiseen tänne -->
    <ul>
        <li>
            <span>Hello world!</span>
        </li>
        <li>
            <span>+[-[&lt;&lt;[+[---&gt;]-[&lt;&lt;&lt;]]]&gt;&gt;&gt;-]&gt;-.---.&gt;..&gt;.&lt;&lt;&lt;&lt;-.&lt;+.&gt;&gt;&gt;&gt;&gt;.&gt;.&lt;&lt;.&lt;-.</span>
        </li>
        <li>
            <span>Abracadabra</span>
        </li>
        <li>
            <span>Alakazam</span>
        </li>
        <li>
            <span>Bibbidi-Bobbidi-Boo</span>
        </li>
        <li>
            <span>By the Power of Grayskull, I HAVE THE POWER</span>
        </li>
        <li>
            <span>Open sesame</span>
        </li>
    </ul>

    <!-- Älä koske alla olevaan lomakkeeseen, tutustumme
        tiedon lisäämiseen hieman myöhemmin -->
    <h2>Add content to list</h2>

    <form action="/" method="POST">
        <input type="text" name="content" />
        <input type="submit" value="Click!" />
    </form>
</body>

</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {}

Handler:
             Type = hellolist.HelloListController
           Method = hellolist.HelloListController#home(Model)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = index
             View = null
        Attribute = list
            value = [Hello world!, +[-[<<[+[--->]-[<<<]]]>>>-]>-.---.>..>.<<<<-.<+.>>>>>.>.<<.<-., Abracadabra, Alakazam, Bibbidi-Bobbidi-Boo, By the Power of Grayskull, I HAVE THE POWER, Open sesame, Shazam]

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Language:"en", Content-Type:"text/html;charset=UTF-8"]
     Content type = text/html;charset=UTF-8
             Body = <!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <title>Hello List!</title>
</head>

<body>
    <h1>Hello List!</h1>

    <!-- lisää toiminnallisuus listalla olevien arvojen listaamiseen tänne -->
    <ul>
        <li>
            <span>Hello world!</span>
        </li>
        <li>
            <span>+[-[&lt;&lt;[+[---&gt;]-[&lt;&lt;&lt;]]]&gt;&gt;&gt;-]&gt;-.---.&gt;..&gt;.&lt;&lt;&lt;&lt;-.&lt;+.&gt;&gt;&gt;&gt;&gt;.&gt;.&lt;&lt;.&lt;-.</span>
        </li>
        <li>
            <span>Abracadabra</span>
        </li>
        <li>
            <span>Alakazam</span>
        </li>
        <li>
            <span>Bibbidi-Bobbidi-Boo</span>
        </li>
        <li>
            <span>By the Power of Grayskull, I HAVE THE POWER</span>
        </li>
        <li>
            <span>Open sesame</span>
        </li>
        <li>
            <span>Shazam</span>
        </li>
    </ul>

    <!-- Älä koske alla olevaan lomakkeeseen, tutustumme
        tiedon lisäämiseen hieman myöhemmin -->
    <h2>Add content to list</h2>

    <form action="/" method="POST">
        <input type="text" name="content" />
        <input type="submit" value="Click!" />
    </form>
</body>

</html>
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2021-07-24 19:07:17.659  INFO 15930 --- [extShutdownHook] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
